<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_Product_Consumed_Number</name>
        <label>Assign Product Consumed Number</label>
        <locationX>50</locationX>
        <locationY>1259</locationY>
        <assignmentItems>
            <assignToReference>ExistentProductConsumedNumber</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Existent_Product_Consumed.ProductConsumedNumber</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Cannot_Consume_Products_Required_Twice</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Count_Existing_Operational_Extra</name>
        <label>Count Existing Operational Extra</label>
        <locationX>182</locationX>
        <locationY>935</locationY>
        <assignmentItems>
            <assignToReference>ProductItemExists</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Filter_for_the_operational_extra</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Does_the_Operational_Extra_already_exist</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Count_Required_Products</name>
        <label>Count Required Products</label>
        <locationX>380</locationX>
        <locationY>503</locationY>
        <assignmentItems>
            <assignToReference>ProductRequiredSize</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Filter_Products_Required</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_a_Product_Required</targetReference>
        </connector>
    </assignments>
    <collectionProcessors>
        <name>Filter_for_the_operational_extra</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Filter for the operational extra</label>
        <locationX>182</locationX>
        <locationY>827</locationY>
        <assignNextValueToReference>currentItem_Does_the_extra_already_exist</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_Products_Consumed_on_WO</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_Does_the_extra_already_exist.ProductName</leftValueReference>
            <operator>EqualTo</operator>
            <rightValue>
                <elementReference>$Record.ProductItem.Product2.Name</elementReference>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>Count_Existing_Operational_Extra</targetReference>
        </connector>
    </collectionProcessors>
    <collectionProcessors>
        <name>Filter_Products_Required</name>
        <elementSubtype>FilterCollectionProcessor</elementSubtype>
        <label>Filter Products Required</label>
        <locationX>380</locationX>
        <locationY>395</locationY>
        <assignNextValueToReference>currentItem_Filter_Products_Required</assignNextValueToReference>
        <collectionProcessorType>FilterCollectionProcessor</collectionProcessorType>
        <collectionReference>Get_Work_Order_Products_Required</collectionReference>
        <conditionLogic>and</conditionLogic>
        <conditions>
            <leftValueReference>currentItem_Filter_Products_Required.ProductName</leftValueReference>
            <operator>EqualTo</operator>
            <rightValue>
                <elementReference>$Record.ProductItem.Product2.Name</elementReference>
            </rightValue>
        </conditions>
        <connector>
            <targetReference>Count_Required_Products</targetReference>
        </connector>
    </collectionProcessors>
    <customErrors>
        <name>Cannot_Consume_Products_Not_Required</name>
        <label>Cannot Consume Products Not Required</label>
        <locationX>578</locationX>
        <locationY>719</locationY>
        <customErrorMessages>
            <errorMessage>Solo se pueden agregar operativos que pertenezcan a los productos requeridos de la orden de trabajo.</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <customErrors>
        <name>Cannot_Consume_Products_Required_Twice</name>
        <label>Cannot Consume Products Required Twice</label>
        <locationX>50</locationX>
        <locationY>1367</locationY>
        <customErrorMessages>
            <errorMessage>Solo se pueden agregar operativos una Ãºnica vez. Para modificar la cantidad seleccione el operativo que ya ha agregado {!ExistentProductConsumedNumber}.</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Does_the_Operational_Extra_already_exist</name>
        <label>Does the Operational Extra already exist?</label>
        <locationX>182</locationX>
        <locationY>1043</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ProductItemExists</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Existent_Product_Consumed</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_a_Product_Required</name>
        <label>Is a Product Required?</label>
        <locationX>380</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>Cannot_Consume_Products_Not_Required</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>CoIT_Yes_productrequired</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ProductRequiredSize</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Products_Consumed_on_WO</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>CoIT RTF Prevent Creation of Extra {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CoIT RTF Prevent Creation of Operational Extras on Wrong Work Type</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Existent_Product_Consumed</name>
        <label>Get Existent Product Consumed</label>
        <locationX>50</locationX>
        <locationY>1151</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Product_Consumed_Number</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WorkOrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Product2Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ProductItem.Product2Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProductConsumed</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Products_Consumed_on_WO</name>
        <label>Get Products Consumed on WO</label>
        <locationX>182</locationX>
        <locationY>719</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Filter_for_the_operational_extra</targetReference>
        </connector>
        <filterLogic>1</filterLogic>
        <filters>
            <field>WorkOrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ProductConsumed</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Work_Order_Products_Required</name>
        <label>Get Work Order Products Required</label>
        <locationX>380</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Filter_Products_Required</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentRecordType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>WorkOrder</stringValue>
            </value>
        </filters>
        <filters>
            <field>ParentRecordId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.WorkOrderId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ProductRequired</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Work_Order_Products_Required</targetReference>
        </connector>
        <filterFormula>TEXT({!$Record.ProductItem.Product2.Family}) = &quot;Adicionales Operativos&quot;</filterFormula>
        <object>ProductConsumed</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Obsolete</status>
    <triggerOrder>500</triggerOrder>
    <variables>
        <name>currentItem_Does_the_extra_already_exist</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ProductConsumed</objectType>
    </variables>
    <variables>
        <name>currentItem_Filter_Products_Required</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ProductRequired</objectType>
    </variables>
    <variables>
        <name>ExistentProductConsumedNumber</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ProductItemExists</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>ProductRequiredSize</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
</Flow>
