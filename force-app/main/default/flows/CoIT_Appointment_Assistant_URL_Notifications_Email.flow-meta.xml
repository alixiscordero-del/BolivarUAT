<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Email_on_Travel_Status</name>
        <label>Email on Travel Status</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <stringValue>santiago.pelaez@colibriit.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Nos encontramos en ruta para atender tu servicio</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>Get_Assigned_Resource.ApptAssistantInfoUrl</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Assign_Email</name>
        <label>Assign Email</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>Email</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Service_Appointment.Contact.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Email_on_Travel_Status</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Appointment_Has_Contact</name>
        <label>Appointment Has Contact?</label>
        <locationX>380</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Appointment_With_Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Service_Appointment.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Contact_Has_Email</targetReference>
            </connector>
            <label>Appointment With Contact</label>
        </rules>
    </decisions>
    <decisions>
        <name>Contact_Has_Email</name>
        <label>Contact Has Email?</label>
        <locationX>182</locationX>
        <locationY>755</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Contact_Has_Email_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Service_Appointment.Contact.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Email</targetReference>
            </connector>
            <label>Contact Has Email</label>
        </rules>
    </decisions>
    <decisions>
        <name>Evaluate_SA_Status</name>
        <label>Evaluate SA Status</label>
        <locationX>611</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Travel_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Service_Appointment.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Travel</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Appointment_Has_Contact</targetReference>
            </connector>
            <label>Travel</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>CoIT Appointment Assistant URL Notifications Email {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CoIT Appointment Assistant URL Notifications Email</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Assigned_Resource</name>
        <label>Get Assigned Resource</label>
        <locationX>611</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Evaluate_SA_Status</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AssignedResource</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Service_Appointment</name>
        <label>Get Service Appointment</label>
        <locationX>611</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Assigned_Resource</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ServiceAppointment.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ServiceAppointment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>485</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Service_Appointment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ApptAssistantInfoUrl</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>ApptAssistantInfoUrl</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>AssignedResource</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>Email</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
